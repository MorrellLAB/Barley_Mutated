#!/bin/bash
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=16
#SBATCH --mem=8gb
#SBATCH --tmp=4gb
#SBATCH -t 02:00:00
#SBATCH --mail-type=ALL
#SBATCH --mail-user=liux1299@umn.edu
#SBATCH -p small,ram256g,ram1t
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err

set -e
set -o pipefail

# This script keeps only the primary mapping from the SAM file and adds the @SQ header lines
# Minimap2 excludes @SQ header lines when the index is too large to hold in RAM
#   See issue: https://github.com/lh3/minimap2/issues/37
# But, we can add it back by providing the reference .fasta.fai file generated from samtools faidx

# Dependencies
module load samtools/1.9

# User provided input arguments
# In this script, we'll submit it as a Slurm task array
SAM_LIST="/scratch.global/liux1299/nanopore_mutated_barley/read_mapping/sam_list.txt"
# Full filepath to output directory
OUT_DIR="/scratch.global/liux1299/nanopore_mutated_barley/read_mapping"
# Full filepath to reference fasta.fai file
REF_FAI="/panfs/roc/groups/9/morrellp/shared/References/Reference_Sequences/Barley/Morex_v3/Barley_MorexV3_pseudomolecules_parts.fasta.fai"
# Number of threads to use in addition to main thread (list one less than maximum available)
#   THREADS - 1
NUM_THREADS="15"

#-----------------
# Check if out dir exists, if not make it
mkdir -p ${OUT_DIR}

# Store SAM files as array
SAM_ARR=($(cat ${SAM_LIST}))
# Run as Slurm task array
# Get the current SAM file
SAM="${SAM_ARR[${SLURM_ARRAY_TASK_ID}]}"
echo "Current SAM file we are processing is: ${SAM}"

OUT_PREFIX=$(basename ${SAM} .sam)

# Use .fasta.fai file to add @SQ header lines to SAM
samtools view -h --threads ${NUM_THREADS} -t ${REF_FAI} ${SAM} -o ${OUT_DIR}/${OUT_PREFIX}_with_SQheaders.sam

# Only keep primary mapping and add @SQ header lines to SAM
samtools view -h --threads ${NUM_THREADS} -F 2308 -t ${REF_FAI} ${SAM} -o ${OUT_DIR}/${OUT_PREFIX}_full_primary.sam
